{"ast":null,"code":"import axios from\"axios\";import io from'socket.io-client';// const socket = openSocket('http://10.0.0.209:8000');\nvar socket;export default{getSocketIP:function getSocketIP(){return axios.get(\"/api/ip\");},initSocket:function initSocket(serverIP){socket=io();// socket = io();\n},getCategories:function getCategories(gameid){return axios.get(\"/api/categories\",{params:{gameid:gameid}});},getGames:function getGames(){return axios.get(\"/api/games\");},updateGameAnswers:function updateGameAnswers(answered,game){return axios.post(\"/api/updateAnswers\",{game:game,answered:answered});},createNewGame:function createNewGame(name){// console.log(name)\nreturn axios.post(\"/api/create-game\",{name:name});},createNewPlayer:function createNewPlayer(name){// console.log(name)\nreturn axios.post(\"/api/create-player\",{name:name});},subscribeToTimer:function subscribeToTimer(cb){socket.on('timer',function(timestamp){return cb(null,timestamp);});socket.emit('subscribeToTimer',5000);},disconnectFromGame:function disconnectFromGame(gameID){socket.emit('unsubscribeFromGame',gameID);},connectToGame:function connectToGame(gameID,playerId,reactFuncs){socket.emit('subscribeToGame',gameID);socket.on('questionID',function(questionID){return reactFuncs['handleQuestion'](questionID);});socket.on('contestantUpdate',function(player){return reactFuncs['handleNewContestant'](player);});socket.on('scoresUpdate',function(scores,turn,guess,correct){return reactFuncs['handleNewScores'](scores,turn,guess,correct);});socket.on('scoresInit',function(scores){return reactFuncs['handleScoresInit'](scores);});socket.on('answerUpdate',function(answers){return reactFuncs['handleAnswerUpdate'](answers);});socket.on('gameCloseQuestion',function(){reactFuncs['closeQuestion']();});socket.on('buzzUpdate',function(playerName){reactFuncs['handleBuzzUpdate'](playerName);});socket.on('timesUp',function(playerName,questionId){reactFuncs['timesUp'](playerName,questionId);});socket.on('questionOver',function(questionId){reactFuncs['questionOver'](questionId);});socket.on('initFinalQuestion',function(){return reactFuncs['initFinalQuestion']();});socket.on('gameOver',function(){return reactFuncs['gameOver']();});socket.on('finalGuess',function(player,guess){return reactFuncs['finalGuess'](player,guess);});return axios.post(\"/api/add-to-game\",{game:gameID,player:playerId});},updateRound:function updateRound(gameID,newRound){socket.emit(\"updateRound\",gameID,newRound);},selectQuestion:function selectQuestion(questionID,gameid){socket.emit('selectQuestion',questionID,gameid);},closeQuestion:function closeQuestion(gameID){socket.emit('closeQuestionSignal',gameID);},submitScores:function submitScores(gameid,scores,turn,answer,correct,round){socket.emit('newScores',gameid,scores,turn,answer,correct,round);},buzz:function buzz(gameID,playerName,question){socket.emit('buzz',gameID,playerName,question);},placeFinalWager:function placeFinalWager(gameID,playerName,wager){socket.emit('finalWager',gameID,playerName,wager);},submitFinal:function submitFinal(gameID,playerName,guess){socket.emit('submitFinal',gameID,playerName,guess);}};","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Utils/API.js"],"names":["axios","io","socket","getSocketIP","get","initSocket","serverIP","getCategories","gameid","params","getGames","updateGameAnswers","answered","game","post","createNewGame","name","createNewPlayer","subscribeToTimer","cb","on","timestamp","emit","disconnectFromGame","gameID","connectToGame","playerId","reactFuncs","questionID","player","scores","turn","guess","correct","answers","playerName","questionId","updateRound","newRound","selectQuestion","closeQuestion","submitScores","answer","round","buzz","question","placeFinalWager","wager","submitFinal"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport io from 'socket.io-client';\n// const socket = openSocket('http://10.0.0.209:8000');\nlet socket;\n\nexport default {\n  getSocketIP(){\n    return axios.get(\"/api/ip\");\n  },\n  initSocket(serverIP){\n    socket = io();\n    // socket = io();\n  },\n  getCategories: function(gameid) {\n    return axios.get(\"/api/categories\",\n      {params:{gameid:gameid}}\n      );\n  },\n  getGames: function() {\n    return axios.get(\"/api/games\");\n  },\n  updateGameAnswers: function(answered, game){\n    return axios.post(\"/api/updateAnswers\", {\n      game:game,\n      answered: answered\n    })\n  },\n  createNewGame: (name) =>{\n    // console.log(name)\n    return axios.post(\"/api/create-game\", {\n      name: name\n    })\n  },\n  createNewPlayer: (name) =>{\n    // console.log(name)\n    return axios.post(\"/api/create-player\", {\n      name: name\n    })\n  },\n  subscribeToTimer(cb) {\n    socket.on('timer', timestamp => cb(null, timestamp));\n    socket.emit('subscribeToTimer', 5000);\n  },\n  disconnectFromGame(gameID){\n    socket.emit('unsubscribeFromGame', gameID);\n\n  },\n  connectToGame(gameID, playerId, reactFuncs){\n    socket.emit('subscribeToGame', gameID);\n\n    socket.on('questionID', questionID =>  reactFuncs['handleQuestion']( questionID) );\n    socket.on('contestantUpdate', player =>  reactFuncs['handleNewContestant'](player) );\n    socket.on('scoresUpdate', (scores, turn, guess, correct) =>  reactFuncs['handleNewScores'](scores, turn, guess, correct) );\n    socket.on('scoresInit', (scores) =>  reactFuncs['handleScoresInit'](scores) );\n    socket.on('answerUpdate', answers =>  reactFuncs['handleAnswerUpdate'](answers) );\n    socket.on('gameCloseQuestion', () => {reactFuncs['closeQuestion']()} );\n    socket.on('buzzUpdate', (playerName) => {reactFuncs['handleBuzzUpdate'](playerName)} );\n    socket.on('timesUp', (playerName, questionId) => {reactFuncs['timesUp'](playerName, questionId)} );\n    socket.on('questionOver', (questionId) => {reactFuncs['questionOver'](questionId)} );\n    socket.on('initFinalQuestion', () => reactFuncs['initFinalQuestion']());\n    socket.on('gameOver', () => reactFuncs['gameOver']());\n    socket.on('finalGuess', (player,guess) => reactFuncs['finalGuess'](player,guess));\n\n    return axios.post(\"/api/add-to-game\", {\n      game:gameID,\n      player:playerId\n    })\n\n  },\n  updateRound(gameID, newRound){\n    socket.emit(\"updateRound\", gameID, newRound)\n  },\n  selectQuestion(questionID, gameid){\n    socket.emit('selectQuestion', questionID, gameid)\n  },\n  closeQuestion(gameID){\n    socket.emit('closeQuestionSignal', gameID);\n  },\n  submitScores(gameid, scores, turn, answer, correct, round){\n    socket.emit('newScores', gameid, scores, turn, answer, correct,round)\n  },\n  buzz(gameID, playerName, question){\n    socket.emit('buzz', gameID, playerName, question)\n  },\n  placeFinalWager(gameID, playerName, wager){\n    socket.emit('finalWager', gameID, playerName, wager)\n  },\n   submitFinal(gameID, playerName, guess){\n    socket.emit('submitFinal', gameID, playerName, guess)\n  }\n  \n};\n"]},"metadata":{},"sourceType":"module"}