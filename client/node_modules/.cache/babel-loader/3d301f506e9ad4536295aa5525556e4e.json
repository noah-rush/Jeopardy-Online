{"ast":null,"code":"var _jsxFileName = \"/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/FinalJeopardy.js\";\nimport React, { Component } from \"react\";\nimport Speech from 'react-speech';\n\nvar FinalJeopardy = props => {\n  // console.log(props.activeCategor\n  // let categories =props.categories \n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-jeopardy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.myscore > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"made-it\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Welcome to Final Jeopardy\"), props.ready ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-stage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, props.question.questions[0].question), props.answered ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-guess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, props.guess) : /*#__PURE__*/React.createElement(\"form\", {\n    id: \"final-answer\",\n    onSubmit: e => {\n      props.finalAnswer(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => props.handleAnswer(e),\n    className: \"final-answer\",\n    type: \"text\",\n    name: \"final-answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wager-stage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"The category is \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"final-cat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, props.question.name)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Place your wager\"), !props.wagerSubmitted ? /*#__PURE__*/React.createElement(\"form\", {\n    id: \"wager\",\n    onSubmit: e => {\n      props.placeWager(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    min: \"0\",\n    max: props.myscore,\n    onChange: e => props.handleWager(e),\n    className: \"wager\",\n    type: \"number\",\n    name: \"wager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  })) : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contestants-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }\n  }, props.contestants.map((player, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contestant\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }, player.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }, props.scores[player._id]))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"didnt-make-it\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Sorry, you need money to participate in Final Jeopardy\")));\n};\n\n_c = FinalJeopardy;\nexport default FinalJeopardy;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinalJeopardy\");","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/FinalJeopardy.js"],"names":["React","Component","Speech","FinalJeopardy","props","myscore","ready","question","questions","answered","guess","e","finalAnswer","handleAnswer","name","wagerSubmitted","placeWager","handleWager","contestants","map","player","index","scores","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Speech from 'react-speech';\n\nvar FinalJeopardy = (props) => {\n    // console.log(props.activeCategor\n    // let categories =props.categories \n    return (\n        <div className = \"final-jeopardy\">\n            {props.myscore > 0 ?\n            <div className = \"made-it\">\n            <h2>Welcome to Final Jeopardy</h2>\n            {props.ready ? \n            <div className = \"question-stage\">\n            <h3>{props.question.questions[0].question}</h3>\n            {props.answered ?\n                <div className = \"final-guess\">\n                {props.guess}\n                </div>:\n            <form id = \"final-answer\" onSubmit = {(e) => {props.finalAnswer(e)}} >\n                <input  onChange = {(e) => props.handleAnswer(e)} className = \"final-answer\" type = \"text\" name = \"final-answer\"></input>\n                <input type = \"submit\"></input>\n                \n            </form>\n        }\n            </div>\n            :\n            <div className = \"wager-stage\">\n            <h3>The category is <span className =\"final-cat\">{props.question.name}</span></h3>\n            <h3>Place your wager</h3>\n            {!props.wagerSubmitted ?\n            <form id = \"wager\" onSubmit = {(e) => {props.placeWager(e)}} >\n                <input min = \"0\" max = {props.myscore} onChange = {(e) => props.handleWager(e)} className = \"wager\" type = \"number\" name = \"wager\"></input>\n                <input type = \"submit\"></input>\n            </form>\n            :\"\"}\n            </div>\n        }\n<div className = \"contestants-table\">\n            {props.contestants.map((player, index) => (\n    \n            \n            <div className =  \"contestant\" key = {index}>\n            \n                   <div className = \"player-name\">\n                      {player.name}\n                   </div>\n                   <div className = \"player-score\">\n                      {props.scores[player._id]}\n                   </div>\n            </div>\n            ))}\n        </div>\n\n            </div>\n            :\n            <div className =\"didnt-make-it\">\n            <h2>Sorry, you need money to participate in Final Jeopardy</h2>\n            </div>\n            }\n       \n        </div>\n    )\n\n}\n\nexport default FinalJeopardy;"]},"metadata":{},"sourceType":"module"}