{"ast":null,"code":"import React,{Component}from\"react\";var Result=function Result(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"answer-result-panel\"},/*#__PURE__*/React.createElement(\"div\",{className:\"result-panel-inner\"},props.questionOver?/*#__PURE__*/React.createElement(\"div\",{className:\"question-over\"},\"The answer was \",props.question.answer,\".\"):props.correct?/*#__PURE__*/React.createElement(\"div\",{className:\"correct-answer\"},\"The answer was \",props.question.answer,\".\",props.buzz,\" gains \",props.question.value,\". The board is \",props.buzz,\"'s\"):props.guess==\"\"?/*#__PURE__*/React.createElement(\"div\",{className:\"times-up\"},\"Times Up! Board is still open.\"):/*#__PURE__*/React.createElement(\"div\",{className:\"incorrect-answer\"},props.buzz,\" guessed \",props.guess,\" and loses \",props.question.value,\".\")));};export default Result;","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/Result.js"],"names":["React","Component","Result","props","questionOver","question","answer","correct","buzz","value","guess"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,GAAIC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACpB,mBACI,2BAAK,SAAS,CAAG,qBAAjB,eACG,2BAAK,SAAS,CAAG,oBAAjB,EAESA,KAAK,CAACC,YAAN,cACA,2BAAK,SAAS,CAAE,eAAhB,oBACgBD,KAAK,CAACE,QAAN,CAAeC,MAD/B,KADA,CAKAH,KAAK,CAACI,OAAN,cACA,2BAAK,SAAS,CAAE,gBAAhB,oBACgBJ,KAAK,CAACE,QAAN,CAAeC,MAD/B,KAEEH,KAAK,CAACK,IAFR,WAEqBL,KAAK,CAACE,QAAN,CAAeI,KAFpC,mBAGcN,KAAK,CAACK,IAHpB,MADA,CAOJL,KAAK,CAACO,KAAN,EAAe,EAAf,cACA,2BAAK,SAAS,CAAE,UAAhB,mCADA,cAMA,2BAAK,SAAS,CAAE,kBAAhB,EAEKP,KAAK,CAACK,IAFX,aAE0BL,KAAK,CAACO,KAFhC,eAEkDP,KAAK,CAACE,QAAN,CAAeI,KAFjE,KApBL,CADH,CADJ,CAmCH,CApCD,CAsCA,cAAeP,CAAAA,MAAf","sourcesContent":["import React, { Component } from \"react\";\n\nvar Result = (props) => {\n    return (\n        <div className = \"answer-result-panel\">\n           <div className = \"result-panel-inner\">\n                {\n                    props.questionOver ?\n                    <div className =\"question-over\">\n                    The answer was {props.question.answer}. \n                    </div>\n                    : \n                    props.correct ?\n                    <div className =\"correct-answer\">\n                    The answer was {props.question.answer}.\n                     {props.buzz} gains {props.question.value}.\n                    The board is {props.buzz}'s\n                    </div>\n                :\n                props.guess == \"\" ?\n                <div className =\"times-up\">\n                Times Up! Board is still open.\n\n                </div>\n                :\n                <div className =\"incorrect-answer\">\n                    {/*The answer was {props.question.answer}.*/}\n                    {props.buzz} guessed {props.guess} and loses {props.question.value}.\n                {/*    {props.me == props.buzz ? \n                    <button id = \"challenge\"> Challenge</button>\n                    :\"\"}*/}\n\n                </div>\n                }\n           </div>\n        </div>\n    )\n\n}\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}