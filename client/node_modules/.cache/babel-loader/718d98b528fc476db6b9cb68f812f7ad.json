{"ast":null,"code":"import _objectSpread from\"/home/noah/jeopardy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/noah/jeopardy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/noah/jeopardy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/noah/jeopardy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/noah/jeopardy-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./App.css\";import API from\"./Utils/API\";import GAME from\"./Utils/game\";import Speech from'react-speech';import JeopardyBoard from'./Components/JeopardyBoard/JeopardyBoard';import Contestants from'./Components/JeopardyBoard/Contestants';import Question from'./Components/JeopardyBoard/Question';import Answer from'./Components/JeopardyBoard/Answer';import Result from'./Components/JeopardyBoard/Result';import FinalJeopardy from'./Components/JeopardyBoard/FinalJeopardy';import GameOver from'./Components/JeopardyBoard/GameOver';import TurnWarning from'./Components/JeopardyBoard/TurnWarning';import MainMenu from'./Components/MainMenu';import Welcome from'./Components/WelcomeScreen';import{withCookies,Cookies}from'react-cookie';import SpeechRecognition from'./Components/SpeechRecognition/SpeechRecognition';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={categories:[],activeQuestion:\"\",activeAnswer:false,activeResult:false,timer:\"\",userScore:0,mainScreen:true,activeCategory:-1,newGameTitle:\"\",game:\"\",games:[],answered:[],gameID:\"\",round:0,timestamp:\"No Timestamp yet\",playerID:\"\",playerName:'',playerNum:0,contestants:[],scores:[],turn:1,buzzedIn:\"\",canbuzz:true,correct:false,resultTimer:\"\",questionOver:false,triedToAnswer:0,totalQuestionsInRound:0,finalWager:0,finalWagerSubmitted:false,finalQuestion:false,finalQuestionAnswered:false,finalResults:false,finalGuesses:{},gameOver:false,activeAnswerTimer:\"\",guess:\"\",resetSpeechTimer:setInterval(function(){_this.resetSpeechRecog();},5000),turnWarning:false};_this.getGames=function(){API.getGames().then(function(res){return _this.setState({games:res.data});}).catch(function(err){return console.log(err);});};_this.getGame=function(gameID){API.getCategories(gameID).then(function(res){var categories=res.data.jeopardyCategories;// console.log(res.data)\nvar gameOver=false;if(res.data.round==2){categories=res.data.doubleCategories;}if(res.data.round==4){gameOver=true;}// console.log(\"round \")\n// console.log(this.state.round)\nif(res.data.round==3){var preFinalScores=_objectSpread({},_this.state.scores);_this.setState({preFinalScores:preFinalScores});}_this.setState({categories:categories,doubleCategories:res.data.doubleCategories,finalJeopardy:res.data.finalJeopardy,games:[],answered:res.data.answered,round:res.data.round,gameOver:gameOver});// console.log(res.)\nvar qsInRound=0;for(var i=0;i<categories.length;i++){qsInRound+=categories[i].questions.length;}_this.setState({totalQuestionsInRound:qsInRound});if(res.data.answered.length==qsInRound){_this.startNextRound();}}).catch(function(err){return console.log(err);});};_this.handleNewContestant=function(players){_this.setState({contestants:players});for(var i=0;i<players.length;i++){if(_this.state.playerID==players[i]._id){_this.state.playerNum=i+1;}}};_this.handleScoresInit=function(scores){_this.setState({scores:scores,preFinalScores:scores});};_this.handleNewScores=function(scores,turn,guess,correct){// console.log(turn)\nif(_this.state.round!=3){if(turn!=0&&turn!=undefined){_this.setState({turn:turn});}if(correct){_this.setState({scores:scores,guess:guess,correct:correct,activeResult:true,resultTimer:setTimeout(function(){_this.closeQuestionFinal();},1500)});}else{_this.setState({scores:scores,guess:guess,correct:correct,activeResult:true,triedToAnswer:_this.state.triedToAnswer+1,resultTimer:setTimeout(function(){_this.closeQuestion();},1500)});}}else{_this.setState({scores:scores});}};_this.questionOver=function(questionid){if(_this.state.activeQuestion._id==questionid){_this.setState({activeResult:true,triedToAnswer:0,questionOver:true,resultTimer:setTimeout(function(){_this.closeQuestionFinal();},1500)});}};_this.closeQuestionFinal=function(){_this.setState({timer:\"\",activeQuestion:\"\",guess:\"\",activeAnswer:false,activeResult:false,questionOver:false});if(_this.state.totalQuestionsInRound==_this.state.answered.length){_this.startNextRound();}};_this.startNextRound=function(){if(_this.state.round==2){_this.setState({preFinalScores:_this.state.scores,round:3,answered:[],categories:_this.state.doubleCategories});API.updateRound(_this.state.gameID,3);}if(_this.state.round==1){_this.setState({round:2,answered:[],categories:_this.state.doubleCategories});API.updateRound(_this.state.gameID,2);var qsInRound=0;for(var i=0;i<_this.state.categories.length;i++){qsInRound+=_this.state.categories[i].questions.length;}_this.setState({totalQuestionsInRound:qsInRound});}};_this.handleAnswerUpdate=function(answers){_this.setState({answered:answers});};_this.closeQuestion=function(){// clearTimeout(this.state.timer)\n_this.setState({timer:\"\",// activeQuestion: \"\",\nguess:\"\",activeAnswer:false,activeResult:false});if(_this.state.triedToAnswer==_this.state.contestants.length){_this.questionOver(_this.state.activeQuestion._id);}};_this.displayQuestion=function(questionid){if(_this.state.turn==_this.state.playerNum){API.selectQuestion(questionid,_this.state.gameID);}else{_this.setState({turnWarning:true});}};_this.pickCategory=function(index1){console.log(index1);_this.setState({activeCategory:index1});};_this.buzzIn=function(){API.buzz(_this.state.gameID,_this.state.playerName,_this.state.activeQuestion._id);};_this.handleBuzzUpdate=function(playerName){_this.setState({activeAnswer:true,buzzedIn:playerName,answerSeconds:6,activeAnswerTimer:setInterval(function(){_this.setState({answerSeconds:_this.state.answerSeconds-1});},1000)});_this.answerField.current.focus();};_this.answerFinalQuestion=function(e){e.preventDefault();var correctAnswer=_this.state.finalJeopardy.questions[0].answer;var correct=false;_this.setState({finalQuestionAnswered:true});if(_this.state.guess!=\"\"){if(_this.state.guess.toLowerCase()==correctAnswer.toLowerCase()){console.log(\"Correct\");_this.state.scores[_this.state.playerID]=_this.state.scores[_this.state.playerID]+parseInt(_this.state.finalWager);}else{_this.state.scores[_this.state.playerID]=_this.state.scores[_this.state.playerID]-parseInt(_this.state.finalWager);}}API.submitFinal(_this.state.gameID,_this.state.playerName,_this.state.guess);API.submitScores(_this.state.gameID,_this.state.scores,_this.state.playerNum,_this.state.guess,correct,_this.state.round);};_this.answerQuestion=function(e){e.preventDefault();if(_this.state.guess!=\"\"){var possibleAnswers=[];clearInterval(_this.state.activeAnswerTimer);var answerVal=_this.state.activeQuestion.value.replace('$','');var turnChange=false;var correct;var guess=_this.state.guess;var correctAnswer=_this.state.activeQuestion.answer.toLowerCase();var matcher=/[a-z]+/gi;correctAnswer=correctAnswer.match(matcher);if(correctAnswer[0].toLowerCase()==\"the\"||correctAnswer[0].toLowerCase()==\"a\"){possibleAnswers.push(correctAnswer.join('').toLowerCase());correctAnswer.splice(0,1);}correctAnswer=correctAnswer.join('').toLowerCase();possibleAnswers.push(correctAnswer);if(guess!=\"\"){guess=guess.match(matcher);guess=guess.join('').toLowerCase();}if(possibleAnswers.includes(guess)){console.log(\"Correct\");_this.state.scores[_this.state.playerID]=_this.state.scores[_this.state.playerID]+parseInt(answerVal);turnChange=true;correct=true;}else{_this.setState({canbuzz:false});console.log(correctAnswer);correct=false;_this.state.scores[_this.state.playerID]=_this.state.scores[_this.state.playerID]-parseInt(answerVal);}if(turnChange){API.submitScores(_this.state.gameID,_this.state.scores,_this.state.playerNum,_this.state.guess,correct,_this.state.round);}else{API.submitScores(_this.state.gameID,_this.state.scores,0,_this.state.guess,correct,_this.state.round);}}};_this.handleAnswer=function(event){_this.setState({guess:event.target.value});};_this.handleGameTitle=function(event){_this.setState({newGameTitle:event.target.value});};_this.handlePlayerName=function(event){_this.setState({newPlayerName:event.target.value});};_this.createNewGame=function(e){e.preventDefault();API.createNewGame(_this.state.newGameTitle).then(function(data){// console.log(data)\n// console.log(\"getting games\")\n// this.getGames();\n_this.startGame(data.data._id,data.data.title);}).catch(function(err){return console.log(err);});};_this.createNewPlayer=function(e){e.preventDefault();API.createNewPlayer(_this.state.newPlayerName).then(function(player){var cookies=new Cookies();cookies.set(\"playerID\",player.data._id);cookies.set(\"playerName\",player.data.name);_this.setState({playerID:player.data._id});_this.setState({playerName:player.data.name});}).catch(function(err){return console.log(err);});};_this.timesUp=function(playerName,questionId){clearInterval(_this.state.activeAnswerTimer);if(!_this.state.activeResult&&playerName==_this.state.playerName&&_this.state.playerName==_this.state.buzzedIn&&_this.state.activeAnswer&&_this.state.activeQuestion._id==questionId){_this.setState({canbuzz:false});var correct=false;var answerVal=_this.state.activeQuestion.value.replace('$','');_this.state.scores[_this.state.playerID]=_this.state.scores[_this.state.playerID]-parseInt(answerVal);API.submitScores(_this.state.gameID,_this.state.scores,0,\"\",correct,_this.state.round);}};_this.finalGuess=function(player,answer){_this.state.finalGuesses[player]=answer;console.log(_this.state.finalGuesses);};_this.gameOver=function(){console.log(\"game Over\");_this.setState({gameOver:true});};_this.backToMain=function(e){e.preventDefault();_this.setState({mainScreen:true});API.disconnectFromGame(_this.state.gameID);_this.setState({gameID:\"\",game:\"\",turnWarning:false});_this.getGames();};_this.startGame=function(gameID,gameName){_this.setState({gameID:gameID,game:gameName});_this.setState({mainScreen:false});var reactFuncs={handleQuestion:_this.handleQuestion,handleNewContestant:_this.handleNewContestant,handleNewScores:_this.handleNewScores,handleBuzzUpdate:_this.handleBuzzUpdate,handleScoresInit:_this.handleScoresInit,handleAnswerUpdate:_this.handleAnswerUpdate,closeQuestion:_this.closeQuestion,timesUp:_this.timesUp,questionOver:_this.questionOver,initFinalQuestion:_this.initFinalQuestion,finalGuess:_this.finalGuess,gameOver:_this.gameOver};API.connectToGame(gameID,_this.state.playerID,reactFuncs).then(function(){_this.getGame(_this.state.gameID);console.log(_this.state.contestants);});};_this.initFinalQuestion=function(){console.log(\"final question ready\");_this.setState({finalQuestion:true});};_this.handleQuestion=function(questionID){var activeCategory=_this.state.categories.filter(function(x,index){return x.questions.some(function(element){return element._id==questionID;});});var activeQuestion=activeCategory[0].questions.filter(function(x){return x._id==questionID;});_this.setState({activeQuestion:activeQuestion[0],canbuzz:true});var mouseClickEvents=['click'];function simulateMouseClick(element){mouseClickEvents.forEach(function(mouseEventType){return element.dispatchEvent(new MouseEvent(mouseEventType,{view:window,bubbles:true,cancelable:true,buttons:1}));});}var element=document.querySelector('.question-name[id=\"'+questionID+'\"] + .rs-container button');simulateMouseClick(element);_this.buzzButton.current.focus();};_this.resetSpeechRecog=function(){if(_this.state.gameID!=\"\"&&_this.state.round<3){var mouseClickEvents=['click'];function simulateMouseClick(element){mouseClickEvents.forEach(function(mouseEventType){return element.dispatchEvent(new MouseEvent(mouseEventType,{view:window,bubbles:true,cancelable:true,buttons:1}));});}var element=document.querySelector('#resetSpeech');simulateMouseClick(element);}};_this.handleFinalWager=function(wager){// console.log(wager.target.value)\n_this.setState({finalWager:wager.target.value});};_this.placeFinalWager=function(wager){wager.preventDefault();_this.setState({finalWagerSubmitted:true});API.placeFinalWager(_this.state.gameID,_this.state.playerName,_this.state.finalWager);};_this.closeWarning=function(){_this.setState({turnWarning:false});};return _this;}_createClass(App,[{key:\"loadCookies\",value:function loadCookies(){var cookies=new Cookies();this.setState({playerName:cookies.get(\"playerName\")||\"\",playerID:cookies.get(\"playerID\")||\"\"});}},{key:\"componentDidMount\",value:function componentDidMount(){API.getSocketIP().then(function(res){console.log(res);API.initSocket(res.data);});this.loadCookies();this.getGames();this.buzzButton=/*#__PURE__*/React.createRef();this.answerField=/*#__PURE__*/React.createRef();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"jeopardy-game\"},this.state.turnWarning?/*#__PURE__*/React.createElement(TurnWarning,{close:this.closeWarning,turn:this.state.contestants[this.state.turn-1].name}):\"\",/*#__PURE__*/React.createElement(\"div\",{className:\"utility-menu\"},this.state.playerID!=\"\"?/*#__PURE__*/React.createElement(\"div\",{className:\"game-info\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"my-name\"},this.state.playerName,this.state.game!=\"\"?\"  |  \"+this.state.game:\"\")):\"\"),this.state.activeResult?/*#__PURE__*/React.createElement(Result,{questionOver:this.state.questionOver,buzz:this.state.buzzedIn,correct:this.state.correct,question:this.state.activeQuestion,guess:this.state.guess,me:this.state.playerName}):this.state.activeAnswer?/*#__PURE__*/React.createElement(Answer,{handleAnswer:this.handleAnswer,answerQuestion:this.answerQuestion,buzzedIn:this.state.buzzedIn,me:this.state.playerName,ref:this.answerField,seconds:this.state.answerSeconds}):\"\",this.state.activeQuestion?/*#__PURE__*/React.createElement(Question,{question:this.state.activeQuestion,buzz:this.buzzIn,canbuzz:this.state.canbuzz,ref:this.buzzButton// handleAnswer = {this.handleAnswer}\n// answerQuestion = {this.answerQuestion}\n}):\"\",this.state.mainScreen?this.state.playerID==\"\"?/*#__PURE__*/React.createElement(\"div\",{className:\"player-reg\"},/*#__PURE__*/React.createElement(Welcome,{handlePlayerName:this.handlePlayerName,createNewPlayer:this.createNewPlayer})):/*#__PURE__*/React.createElement(\"div\",{className:\"main-menu\"},/*#__PURE__*/React.createElement(MainMenu,{startGame:this.startGame,createNewGame:this.createNewGame,handleGameTitle:this.handleGameTitle,games:this.state.games})):this.state.round>=3?this.state.gameOver?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(GameOver,{finalGuesses:this.state.finalGuesses,scores:this.state.preFinalScores,finalScores:this.state.scores,contestants:this.state.contestants,finalAnswer:this.state.finalJeopardy.questions[0].answer}),/*#__PURE__*/React.createElement(Contestants,{scores:this.state.scores,contestants:this.state.contestants,turn:\"9\",backToMenu:this.backToMain})):/*#__PURE__*/React.createElement(\"div\",{className:\"jeopardy-board\"},/*#__PURE__*/React.createElement(Contestants,{scores:this.state.scores,contestants:this.state.contestants,turn:\"9\",backToMenu:this.backToMain}),/*#__PURE__*/React.createElement(FinalJeopardy,{wagerSubmitted:this.state.finalWagerSubmitted,wager:this.state.finalWager,handleWager:this.handleFinalWager,placeWager:this.placeFinalWager,ready:this.state.finalQuestion,myscore:this.state.preFinalScores[this.state.playerID],question:this.state.finalJeopardy,handleAnswer:this.handleAnswer,finalAnswer:this.answerFinalQuestion,scores:this.state.preFinalScores,finalScores:this.state.scores,contestants:this.state.contestants,turn:this.state.turn,answered:this.state.finalQuestionAnswered,guess:this.state.guess})):/*#__PURE__*/React.createElement(\"div\",{className:\"jeopardy-board\"},/*#__PURE__*/React.createElement(\"div\",{className:\"just-the-board\"},/*#__PURE__*/React.createElement(JeopardyBoard,{endRound:this.state.totalQuestionsInRound,answered:this.state.answered,activeCategory:this.state.activeCategory,displayQuestion:this.displayQuestion,categories:this.state.categories,doubleCat:this.state.doubleCategories,round:this.state.round})),/*#__PURE__*/React.createElement(Contestants,{scores:this.state.scores,contestants:this.state.contestants,turn:this.state.turn,backToMenu:this.backToMain}),/*#__PURE__*/React.createElement(SpeechRecognition,{displayQuestion:this.displayQuestion,activeCategory:this.state.activeCategory,categories:this.state.categories,pickCategory:this.pickCategory})));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/App.js"],"names":["React","Component","API","GAME","Speech","JeopardyBoard","Contestants","Question","Answer","Result","FinalJeopardy","GameOver","TurnWarning","MainMenu","Welcome","withCookies","Cookies","SpeechRecognition","App","state","categories","activeQuestion","activeAnswer","activeResult","timer","userScore","mainScreen","activeCategory","newGameTitle","game","games","answered","gameID","round","timestamp","playerID","playerName","playerNum","contestants","scores","turn","buzzedIn","canbuzz","correct","resultTimer","questionOver","triedToAnswer","totalQuestionsInRound","finalWager","finalWagerSubmitted","finalQuestion","finalQuestionAnswered","finalResults","finalGuesses","gameOver","activeAnswerTimer","guess","resetSpeechTimer","setInterval","resetSpeechRecog","turnWarning","getGames","then","res","setState","data","catch","err","console","log","getGame","getCategories","jeopardyCategories","doubleCategories","preFinalScores","finalJeopardy","qsInRound","i","length","questions","startNextRound","handleNewContestant","players","_id","handleScoresInit","handleNewScores","undefined","setTimeout","closeQuestionFinal","closeQuestion","questionid","updateRound","handleAnswerUpdate","answers","displayQuestion","selectQuestion","pickCategory","index1","buzzIn","buzz","handleBuzzUpdate","answerSeconds","answerField","current","focus","answerFinalQuestion","e","preventDefault","correctAnswer","answer","toLowerCase","parseInt","submitFinal","submitScores","answerQuestion","possibleAnswers","clearInterval","answerVal","value","replace","turnChange","matcher","match","push","join","splice","includes","handleAnswer","event","target","handleGameTitle","handlePlayerName","newPlayerName","createNewGame","startGame","title","createNewPlayer","player","cookies","set","name","timesUp","questionId","finalGuess","backToMain","disconnectFromGame","gameName","reactFuncs","handleQuestion","initFinalQuestion","connectToGame","questionID","filter","x","index","some","element","mouseClickEvents","simulateMouseClick","forEach","mouseEventType","dispatchEvent","MouseEvent","view","window","bubbles","cancelable","buttons","document","querySelector","buzzButton","handleFinalWager","wager","placeFinalWager","closeWarning","get","getSocketIP","initSocket","loadCookies","createRef"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport API from \"./Utils/API\";\nimport GAME from \"./Utils/game\";\n\nimport Speech from 'react-speech';\nimport JeopardyBoard from './Components/JeopardyBoard/JeopardyBoard'\nimport Contestants from './Components/JeopardyBoard/Contestants'\nimport Question from './Components/JeopardyBoard/Question'\nimport Answer from './Components/JeopardyBoard/Answer'\nimport Result from './Components/JeopardyBoard/Result'\nimport FinalJeopardy from './Components/JeopardyBoard/FinalJeopardy'\nimport GameOver from './Components/JeopardyBoard/GameOver'\nimport TurnWarning from './Components/JeopardyBoard/TurnWarning'\nimport MainMenu from './Components/MainMenu'\nimport Welcome from './Components/WelcomeScreen'\nimport { withCookies, Cookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\n\nimport SpeechRecognition from './Components/SpeechRecognition/SpeechRecognition';\n\n\n\nclass App extends Component {\n\n\n    state = {\n\n        categories: [],\n        activeQuestion: \"\",\n        activeAnswer: false,\n        activeResult: false,\n        timer: \"\",\n        userScore: 0,\n        mainScreen: true,\n        activeCategory: -1,\n        newGameTitle: \"\",\n        game :\"\",\n        games: [],\n        answered: [],\n        gameID: \"\",\n        round: 0,\n        timestamp: \"No Timestamp yet\",\n        playerID: \"\",\n        playerName: '',\n        playerNum: 0,\n        contestants: [],\n        scores: [],\n        turn: 1,\n        buzzedIn: \"\",\n        canbuzz: true,\n        correct: false,\n        resultTimer: \"\",\n        questionOver: false,\n        triedToAnswer: 0,\n        totalQuestionsInRound: 0,\n        finalWager: 0,\n        finalWagerSubmitted: false,\n        finalQuestion: false,\n        finalQuestionAnswered: false,\n        finalResults: false,\n        finalGuesses: {},\n        gameOver: false,\n        activeAnswerTimer: \"\",\n        guess: \"\",\n        resetSpeechTimer: setInterval(() => { this.resetSpeechRecog() }, 5000),\n        turnWarning:false\n    }\n\n    loadCookies() {\n        const cookies = new Cookies();\n        this.setState({\n            playerName: cookies.get(\"playerName\") || \"\",\n            playerID: cookies.get(\"playerID\") || \"\",\n\n        })\n    }\n\n    componentDidMount() {\n\n        API.getSocketIP().then(\n            (res) => {\n                console.log(res);\n                API.initSocket(res.data)\n            })\n        this.loadCookies()\n        this.getGames();\n        this.buzzButton = React.createRef();\n        this.answerField = React.createRef();\n\n\n    }\n    getGames = () => {\n        API.getGames()\n            .then(res => this.setState({\n                games: res.data\n            }))\n            .catch(err => console.log(err))\n    }\n\n    getGame = (gameID) => {\n        API.getCategories(gameID)\n            .then((res) => {\n                let categories = res.data.jeopardyCategories\n                // console.log(res.data)\n                let gameOver = false\n                if (res.data.round == 2) {\n                    categories = res.data.doubleCategories\n                }\n                if (res.data.round == 4) {\n                    gameOver = true\n                }\n                // console.log(\"round \")\n                // console.log(this.state.round)\n                if (res.data.round == 3) {\n                    let preFinalScores = { ...this.state.scores }\n                    this.setState({ preFinalScores: preFinalScores })\n                }\n                this.setState({\n                    categories: categories,\n                    doubleCategories: res.data.doubleCategories,\n                    finalJeopardy: res.data.finalJeopardy,\n                    games: [],\n                    answered: res.data.answered,\n                    round: res.data.round,\n                    gameOver: gameOver\n                })\n                // console.log(res.)\n\n\n                let qsInRound = 0;\n                for (var i = 0; i < categories.length; i++) {\n                    qsInRound += categories[i].questions.length\n                }\n                this.setState({ totalQuestionsInRound: qsInRound })\n                if (res.data.answered.length == qsInRound) {\n                    this.startNextRound()\n                }\n            })\n            .catch(err => console.log(err));\n\n    }\n    handleNewContestant = (players) => {\n        this.setState({ contestants: players })\n        for (var i = 0; i < players.length; i++) {\n            if (this.state.playerID == players[i]._id) {\n                this.state.playerNum = i + 1;\n            }\n        }\n    }\n    handleScoresInit = (scores) => {\n\n        this.setState({ scores: scores, preFinalScores: scores })\n\n    }\n    handleNewScores = (scores, turn, guess, correct) => {\n        // console.log(turn)\n        if (this.state.round != 3) {\n            if (turn != 0 && turn != undefined) {\n                this.setState({ turn: turn });\n            }\n            if (correct) {\n                this.setState({\n                    scores: scores,\n                    guess: guess,\n                    correct: correct,\n                    activeResult: true,\n                    resultTimer: setTimeout(() => {\n                        this.closeQuestionFinal()\n                    }, 1500)\n                })\n            } else {\n\n                this.setState({\n                    scores: scores,\n                    guess: guess,\n                    correct: correct,\n                    activeResult: true,\n                    triedToAnswer: this.state.triedToAnswer + 1,\n                    resultTimer: setTimeout(() => {\n                        this.closeQuestion()\n                    }, 1500)\n                })\n\n            }\n        } else {\n            this.setState({\n                scores: scores\n            })\n        }\n\n    }\n    questionOver = (questionid) => {\n        if (this.state.activeQuestion._id == questionid) {\n            this.setState({\n                activeResult: true,\n                triedToAnswer: 0,\n                questionOver: true,\n                resultTimer: setTimeout(() => {\n                    this.closeQuestionFinal()\n                }, 1500)\n            })\n        }\n    }\n    closeQuestionFinal = () => {\n        this.setState({\n            timer: \"\",\n            activeQuestion: \"\",\n            guess: \"\",\n\n            activeAnswer: false,\n            activeResult: false,\n            questionOver: false\n        })\n        if (this.state.totalQuestionsInRound == this.state.answered.length) {\n            this.startNextRound()\n\n        }\n    }\n    startNextRound = () => {\n        if (this.state.round == 2) {\n            this.setState({ preFinalScores: this.state.scores, round: 3, answered: [], categories: this.state.doubleCategories })\n            API.updateRound(this.state.gameID, 3)\n\n        }\n        if (this.state.round == 1) {\n            this.setState({ round: 2, answered: [], categories: this.state.doubleCategories })\n            API.updateRound(this.state.gameID, 2)\n            let qsInRound = 0;\n            for (var i = 0; i < this.state.categories.length; i++) {\n                qsInRound += this.state.categories[i].questions.length\n            }\n            this.setState({ totalQuestionsInRound: qsInRound })\n        }\n\n    }\n    handleAnswerUpdate = (answers) => {\n        this.setState({ answered: answers })\n    }\n    closeQuestion = () => {\n        // clearTimeout(this.state.timer)\n        this.setState({\n            timer: \"\",\n            // activeQuestion: \"\",\n            guess: \"\",\n            activeAnswer: false,\n            activeResult: false\n        })\n        if (this.state.triedToAnswer == this.state.contestants.length) {\n\n            this.questionOver(this.state.activeQuestion._id)\n\n        }\n    }\n    displayQuestion = (questionid) => {\n        if (this.state.turn == this.state.playerNum) {\n            API.selectQuestion(questionid, this.state.gameID)\n        }else{\n            this.setState({turnWarning:true})\n        }\n    }\n    pickCategory = (index1) => {\n        console.log(index1)\n        this.setState({\n            activeCategory: index1\n        })\n\n    }\n    buzzIn = () => {\n        API.buzz(this.state.gameID, this.state.playerName, this.state.activeQuestion._id)\n    }\n    handleBuzzUpdate = (playerName) => {\n        this.setState({\n            activeAnswer: true,\n            buzzedIn: playerName,\n            answerSeconds: 6,\n            activeAnswerTimer: setInterval(() => {\n                this.setState({ answerSeconds: this.state.answerSeconds - 1 })\n            }, 1000)\n        })\n        this.answerField.current.focus()\n\n    }\n    answerFinalQuestion = (e) => {\n        e.preventDefault();\n\n        let correctAnswer = this.state.finalJeopardy.questions[0].answer\n        let correct = false\n        this.setState({ finalQuestionAnswered: true })\n        if (this.state.guess != \"\") {\n            if (this.state.guess.toLowerCase() == correctAnswer.toLowerCase()) {\n                console.log(\"Correct\")\n                this.state.scores[this.state.playerID] = this.state.scores[this.state.playerID] + parseInt(this.state.finalWager)\n            } else {\n                this.state.scores[this.state.playerID] = this.state.scores[this.state.playerID] - parseInt(this.state.finalWager)\n            }\n        }\n        API.submitFinal(this.state.gameID, this.state.playerName, this.state.guess)\n        API.submitScores(this.state.gameID, this.state.scores, this.state.playerNum, this.state.guess, correct, this.state.round)\n    }\n    answerQuestion = (e) => {\n        e.preventDefault();\n        if (this.state.guess != \"\") {\n            let possibleAnswers = []\n\n            clearInterval(this.state.activeAnswerTimer)\n            let answerVal = this.state.activeQuestion.value.replace('$', '');\n            let turnChange = false;\n            let correct\n\n            let guess = this.state.guess\n            let correctAnswer = this.state.activeQuestion.answer.toLowerCase()\n\n            var matcher = /[a-z]+/gi;\n            correctAnswer = correctAnswer.match(matcher);\n            if (correctAnswer[0].toLowerCase() == \"the\" || correctAnswer[0].toLowerCase() == \"a\") {\n                possibleAnswers.push(correctAnswer.join('').toLowerCase())\n                correctAnswer.splice(0, 1)\n            }\n            correctAnswer = correctAnswer.join('').toLowerCase();\n            possibleAnswers.push(correctAnswer)\n\n\n            if (guess != \"\") {\n                guess = guess.match(matcher);\n                guess = guess.join('').toLowerCase();\n            }\n            if (possibleAnswers.includes(guess)) {\n                console.log(\"Correct\")\n                this.state.scores[this.state.playerID] = this.state.scores[this.state.playerID] + parseInt(answerVal)\n                turnChange = true;\n                correct = true;\n            } else {\n                this.setState({ canbuzz: false })\n                console.log(correctAnswer)\n                correct = false;\n                this.state.scores[this.state.playerID] = this.state.scores[this.state.playerID] - parseInt(answerVal)\n            }\n\n            if (turnChange) {\n                API.submitScores(this.state.gameID, this.state.scores, this.state.playerNum, this.state.guess, correct, this.state.round)\n            } else {\n                API.submitScores(this.state.gameID, this.state.scores, 0, this.state.guess, correct, this.state.round)\n            }\n        }\n    }\n\n    handleAnswer = (event) => {\n        this.setState({\n            guess: event.target.value\n        })\n    }\n    handleGameTitle = (event) => {\n        this.setState({\n            newGameTitle: event.target.value\n        })\n    }\n    handlePlayerName = (event) => {\n        this.setState({\n            newPlayerName: event.target.value\n        })\n    }\n    createNewGame = (e) => {\n        e.preventDefault();\n        API.createNewGame(this.state.newGameTitle)\n            .then((data) => {\n                // console.log(data)\n                // console.log(\"getting games\")\n                // this.getGames();\n                this.startGame(data.data._id, data.data.title)\n            })\n            .catch(err => console.log(err));\n    }\n    createNewPlayer = (e) => {\n        e.preventDefault();\n        API.createNewPlayer(this.state.newPlayerName)\n            .then((player) => {\n                const cookies = new Cookies();\n                cookies.set(\"playerID\", player.data._id);\n                cookies.set(\"playerName\", player.data.name);\n                this.setState({ playerID: player.data._id })\n                this.setState({ playerName: player.data.name })\n\n            })\n            .catch(err => console.log(err));\n    }\n    timesUp = (playerName, questionId) => {\n        clearInterval(this.state.activeAnswerTimer)\n\n        if (!this.state.activeResult && playerName == this.state.playerName && this.state.playerName == this.state.buzzedIn && this.state.activeAnswer && this.state.activeQuestion._id == questionId) {\n            this.setState({ canbuzz: false })\n            let correct = false;\n            let answerVal = this.state.activeQuestion.value.replace('$', '');\n            this.state.scores[this.state.playerID] = this.state.scores[this.state.playerID] - parseInt(answerVal)\n            API.submitScores(this.state.gameID, this.state.scores, 0, \"\", correct, this.state.round)\n\n        }\n    }\n    finalGuess = (player, answer) => {\n        this.state.finalGuesses[player] = answer\n\n        console.log(this.state.finalGuesses)\n    }\n    gameOver = () => {\n        console.log(\"game Over\")\n        this.setState({ gameOver: true })\n    }\n    backToMain = (e) =>{\n        e.preventDefault()\n        this.setState({ mainScreen: true });\n        API.disconnectFromGame(this.state.gameID);\n        this.setState({ gameID: \"\", game:\"\", turnWarning:false });\n        this.getGames()\n \n\n\n    }\n    startGame = (gameID, gameName) => {\n\n\n        this.setState({ gameID: gameID, game:gameName });\n        this.setState({ mainScreen: false });\n        let reactFuncs = {\n            handleQuestion: this.handleQuestion,\n            handleNewContestant: this.handleNewContestant,\n            handleNewScores: this.handleNewScores,\n            handleBuzzUpdate: this.handleBuzzUpdate,\n            handleScoresInit: this.handleScoresInit,\n            handleAnswerUpdate: this.handleAnswerUpdate,\n            closeQuestion: this.closeQuestion,\n            timesUp: this.timesUp,\n            questionOver: this.questionOver,\n            initFinalQuestion: this.initFinalQuestion,\n            finalGuess: this.finalGuess,\n            gameOver: this.gameOver\n        }\n\n        API.connectToGame(gameID, this.state.playerID, reactFuncs).then(() => {\n            this.getGame(this.state.gameID);\n            console.log(this.state.contestants)\n        })\n    }\n    initFinalQuestion = () => {\n        console.log(\"final question ready\")\n        this.setState({ finalQuestion: true })\n    }\n    handleQuestion = (questionID) => {\n\n        let activeCategory = this.state.categories.filter((x, index) => {\n            return x.questions.some((element) => element._id == questionID);\n        })\n        let activeQuestion = activeCategory[0].questions.filter((x) => x._id == questionID);\n        this.setState({\n            activeQuestion: activeQuestion[0],\n            canbuzz: true\n\n        })\n        const mouseClickEvents = ['click'];\n\n        function simulateMouseClick(element) {\n            mouseClickEvents.forEach(mouseEventType =>\n                element.dispatchEvent(\n                    new MouseEvent(mouseEventType, {\n                        view: window,\n                        bubbles: true,\n                        cancelable: true,\n                        buttons: 1\n                    })\n                )\n            );\n        }\n\n        var element = document.querySelector('.question-name[id=\"' + questionID + '\"] + .rs-container button');\n        simulateMouseClick(element);\n        this.buzzButton.current.focus()\n\n\n    }\n    resetSpeechRecog = () => {\n        if (this.state.gameID != \"\" && this.state.round<3) {\n            const mouseClickEvents = ['click'];\n\n\n            function simulateMouseClick(element) {\n                mouseClickEvents.forEach(mouseEventType =>\n                    element.dispatchEvent(\n                        new MouseEvent(mouseEventType, {\n                            view: window,\n                            bubbles: true,\n                            cancelable: true,\n                            buttons: 1\n                        })\n                    )\n                );\n            }\n\n            var element = document.querySelector('#resetSpeech');\n            simulateMouseClick(element);\n        }\n    }\n    handleFinalWager = (wager) => {\n        // console.log(wager.target.value)\n        this.setState({ finalWager: wager.target.value })\n    }\n    placeFinalWager = (wager) => {\n        wager.preventDefault();\n        this.setState({ finalWagerSubmitted: true })\n        API.placeFinalWager(this.state.gameID, this.state.playerName, this.state.finalWager)\n    }\n\n    closeWarning = () =>{\n        this.setState({turnWarning:false})\n    }\n    render() {\n        return (\n            <div className = \"jeopardy-game\">\n                {this.state.turnWarning ? \n                    <TurnWarning close = {this.closeWarning} turn = {this.state.contestants[this.state.turn -1].name}></TurnWarning> :\"\"}\n                \n                <div className = \"utility-menu\">\n                {this.state.playerID != \"\" ? \n                <div className =\"game-info\">\n                <h3 className = \"my-name\">{this.state.playerName}\n                {this.state.game !=\"\" ? \"  |  \" + this.state.game : \"\"}\n                </h3> \n                </div>\n                : \"\"}\n                </div>\n\n\n                 {this.state.activeResult ? \n                <Result \n                questionOver = {this.state.questionOver}\n                    buzz = {this.state.buzzedIn}\n                    correct = {this.state.correct}\n                    question = {this.state.activeQuestion}\n                    guess = {this.state.guess}\n                    me = {this.state.playerName}\n\n                />\n                \n                : \n                this.state.activeAnswer ?\n                <Answer \n                    handleAnswer = {this.handleAnswer}\n                    answerQuestion = {this.answerQuestion}\n                    buzzedIn = {this.state.buzzedIn}\n                    me = {this.state.playerName}\n                    ref = {this.answerField}\n                    seconds = {this.state.answerSeconds}\n                />\n                : \"\"}\n\n\n            {this.state.activeQuestion ? \n                <Question \n                    question = {this.state.activeQuestion}\n                    buzz = {this.buzzIn}\n                    canbuzz = {this.state.canbuzz}\n                    ref = {this.buzzButton}\n                    // handleAnswer = {this.handleAnswer}\n                    // answerQuestion = {this.answerQuestion}\n                />\n                \n            : \"\"}\n\n\n            {this.state.mainScreen ? \n                this.state.playerID == \"\" ?\n                <div className = \"player-reg\">\n                    <Welcome handlePlayerName = {this.handlePlayerName}\n                            createNewPlayer = {this.createNewPlayer}/>\n                </div>\n                :\n                <div className = \"main-menu\">\n\n                <MainMenu   \n                    startGame ={this.startGame}\n                    createNewGame = {this.createNewGame} \n                    handleGameTitle = {this.handleGameTitle} \n                    games = {this.state.games}>\n                </MainMenu>\n                </div>\n                :\n                this.state.round >= 3 ?\n\n                this.state.gameOver ?\n                <div>\n                <GameOver\n                finalGuesses = {this.state.finalGuesses}\n                scores = {this.state.preFinalScores}\n                finalScores = {this.state.scores}\n                contestants = {this.state.contestants} \n                finalAnswer = {this.state.finalJeopardy.questions[0].answer}\n\n                />\n                <Contestants\n                scores = {this.state.scores}\n                contestants = {this.state.contestants} \n                turn = '9'\n                backToMenu = {this.backToMain}\n            />\n            </div>\n                :\n                <div className = \"jeopardy-board\">\n                <Contestants\n                scores = {this.state.scores}\n                contestants = {this.state.contestants} \n                turn = '9'\n                backToMenu = {this.backToMain}\n            />\n                <FinalJeopardy\n        \n                wagerSubmitted = {this.state.finalWagerSubmitted}\n                wager = {this.state.finalWager}\n                handleWager = {this.handleFinalWager}\n                placeWager = {this.placeFinalWager}\n                ready = {this.state.finalQuestion}\n                myscore = {this.state.preFinalScores[this.state.playerID]}\n                question = {this.state.finalJeopardy}\n                handleAnswer = {this.handleAnswer}\n                finalAnswer = {this.answerFinalQuestion}\n                scores = {this.state.preFinalScores}\n                finalScores = {this.state.scores}\n                contestants = {this.state.contestants} \n                turn = {this.state.turn}\n                answered={this.state.finalQuestionAnswered}\n                guess = {this.state.guess}\n\n                />\n                </div>\n                :\n            <div className = \"jeopardy-board\">\n            <div className = \"just-the-board\">\n\n           <JeopardyBoard  \n                    endRound= {this.state.totalQuestionsInRound}\n                    answered = {this.state.answered}\n                    activeCategory = {this.state.activeCategory} \n                    displayQuestion = {this.displayQuestion} \n                    categories = {this.state.categories}\n                    doubleCat = {this.state.doubleCategories}\n                    round = {this.state.round}/>\n            </div>\n            <Contestants\n                scores = {this.state.scores}\n                contestants = {this.state.contestants} \n                turn = {this.state.turn}\n                backToMenu = {this.backToMain}\n            />\n            <SpeechRecognition \n            displayQuestion = {this.displayQuestion} \n            activeCategory = {this.state.activeCategory} \n            categories = {this.state.categories} \n            pickCategory = {this.pickCategory}\n        ></SpeechRecognition>\n        </div>\n    }\n         \n       </div>\n\n\n        )\n\n\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}