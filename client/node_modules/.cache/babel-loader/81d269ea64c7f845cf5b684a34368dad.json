{"ast":null,"code":"var _jsxFileName = \"/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/GameOver.js\";\nimport React, { Component } from \"react\";\nimport Speech from 'react-speech';\n\nvar GameOver = props => {\n  console.log(props.finalGuesses); // let categories =props.categories \n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-over\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, props.contestants.map((player, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-results\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, props.finalAnswer), props.finalGuesses != {} ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"readout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }\n  }, \" \", player.name), \" guessed \", props.finalGuesses[player.name], \" and wagered\", Math.abs(props.scores[player._id] - props.finalScores[player._id]), \". For a final score of \", props.finalScores[player._id]) : \"\")));\n};\n\n_c = GameOver;\nexport default GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/GameOver.js"],"names":["React","Component","Speech","GameOver","props","console","log","finalGuesses","contestants","map","player","index","finalAnswer","name","Math","abs","scores","_id","finalScores"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAIC,QAAQ,GAAIC,KAAD,IAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,YAAlB,EADsB,CAEtB;;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKH,KAAK,CAACI,WAAN,CAAkBC,GAAlB,CAAsB,CAACC,MAAD,EAASC,KAAT,kBAGvB;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAiC,IAAA,GAAG,EAAIA,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCP,KAAK,CAACQ,WAAvC,CADJ,EAEKR,KAAK,CAACG,YAAN,IAAsB,EAAtB,gBACD;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAM,IAAA,SAAS,EAAG,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCG,MAAM,CAACG,IAAzC,CADH,eACkET,KAAK,CAACG,YAAN,CAAmBG,MAAM,CAACG,IAA1B,CADlE,kBAEKC,IAAI,CAACC,GAAL,CAASX,KAAK,CAACY,MAAN,CAAaN,MAAM,CAACO,GAApB,IAA2Bb,KAAK,CAACc,WAAN,CAAkBR,MAAM,CAACO,GAAzB,CAApC,CAFL,6BAEgGb,KAAK,CAACc,WAAN,CAAkBR,MAAM,CAACO,GAAzB,CAFhG,CADC,GAKC,EAPN,CAHC,CAFL,CADJ;AAmBH,CAtBD;;KAAId,Q;AAwBJ,eAAeA,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Speech from 'react-speech';\n\nvar GameOver = (props) => {\n    console.log(props.finalGuesses)\n    // let categories =props.categories \n    return (\n        <div className = \"game-over\">\n           \n            {props.contestants.map((player, index) => (\n    \n            \n            <div className = \"final-results\" key = {index}>\n                <div className = \"final-answer\">{props.finalAnswer}</div>\n                {props.finalGuesses != {} ?\n                <div className = \"readout\">\n                   <span className = \"player-name\"> {player.name}</span> guessed {props.finalGuesses[player.name]} and wagered \n                    {Math.abs(props.scores[player._id] - props.finalScores[player._id])}. For a final score of {props.finalScores[player._id]}\n                   </div>\n                : \"\"}\n            </div>\n            ))}\n        </div>\n        \n    )\n}\n\nexport default GameOver;"]},"metadata":{},"sourceType":"module"}