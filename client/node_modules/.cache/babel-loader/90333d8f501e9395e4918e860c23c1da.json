{"ast":null,"code":"import React,{Component}from\"react\";import Speech from'react-speech';var GameOver=function GameOver(props){// let categories =props.categories \nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"game-over\"},props.contestants.map(function(player,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"final-results\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"final-answer\"},\"Final Answer: \",props.finalAnswer),Object.keys(props.finalGuesses).length===0?/*#__PURE__*/React.createElement(\"div\",{className:\"past-game-readout\"},/*#__PURE__*/React.createElement(\"span\",{className:\"player-name\"},\" \",player.name),\" finished with \",props.finalScores[player._id]):/*#__PURE__*/React.createElement(\"div\",{className:\"readout\"},/*#__PURE__*/React.createElement(\"span\",{className:\"player-name\"},\" \",player.name),\" guessed \",props.finalGuesses[player.name],\" and wagered $\",Math.abs(props.scores[player._id]-props.finalScores[player._id]),\". For a final score of $\",props.finalScores[player._id]));}));};export default GameOver;","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/GameOver.js"],"names":["React","Component","Speech","GameOver","props","contestants","map","player","index","finalAnswer","Object","keys","finalGuesses","length","name","finalScores","_id","Math","abs","scores"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,GAAIC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACtB;AACA,mBACI,2BAAK,SAAS,CAAG,WAAjB,EAEKA,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAsB,SAACC,MAAD,CAASC,KAAT,qBAGvB,2BAAK,SAAS,CAAG,eAAjB,CAAiC,GAAG,CAAIA,KAAxC,eACI,2BAAK,SAAS,CAAG,cAAjB,mBAA+CJ,KAAK,CAACK,WAArD,CADJ,CAEKC,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACQ,YAAlB,EAAgCC,MAAhC,GAA2C,CAA3C,cACD,2BAAK,SAAS,CAAG,mBAAjB,eACA,4BAAM,SAAS,CAAG,aAAlB,MAAkCN,MAAM,CAACO,IAAzC,CADA,mBACqEV,KAAK,CAACW,WAAN,CAAkBR,MAAM,CAACS,GAAzB,CADrE,CADC,cAOD,2BAAK,SAAS,CAAG,SAAjB,eACG,4BAAM,SAAS,CAAG,aAAlB,MAAkCT,MAAM,CAACO,IAAzC,CADH,aACkEV,KAAK,CAACQ,YAAN,CAAmBL,MAAM,CAACO,IAA1B,CADlE,kBAEKG,IAAI,CAACC,GAAL,CAASd,KAAK,CAACe,MAAN,CAAaZ,MAAM,CAACS,GAApB,EAA2BZ,KAAK,CAACW,WAAN,CAAkBR,MAAM,CAACS,GAAzB,CAApC,CAFL,4BAEiGZ,KAAK,CAACW,WAAN,CAAkBR,MAAM,CAACS,GAAzB,CAFjG,CATJ,CAHuB,EAAtB,CAFL,CADJ,CAyBH,CA3BD,CA6BA,cAAeb,CAAAA,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Speech from 'react-speech';\n\nvar GameOver = (props) => {\n    // let categories =props.categories \n    return (\n        <div className = \"game-over\">\n           \n            {props.contestants.map((player, index) => (\n    \n            \n            <div className = \"final-results\" key = {index}>\n                <div className = \"final-answer\">Final Answer: {props.finalAnswer}</div>\n                {Object.keys(props.finalGuesses).length === 0 ? \n                <div className = \"past-game-readout\">\n                <span className = \"player-name\"> {player.name}</span> finished with {props.finalScores[player._id]}\n              \n                </div> \n                : \n                \n                <div className = \"readout\">\n                   <span className = \"player-name\"> {player.name}</span> guessed {props.finalGuesses[player.name]} and wagered $ \n                    {Math.abs(props.scores[player._id] - props.finalScores[player._id])}. For a final score of ${props.finalScores[player._id]}\n                   </div>\n                }\n            </div>\n            ))}\n        </div>\n        \n    )\n}\n\nexport default GameOver;"]},"metadata":{},"sourceType":"module"}