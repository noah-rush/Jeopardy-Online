{"ast":null,"code":"var _jsxFileName = \"/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/Question.js\";\nimport React, { Component } from \"react\";\nvar Question = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"active-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, props.question.question), props.canbuzz ? /*#__PURE__*/React.createElement(\"button\", {\n    ref: ref,\n    onFocus: () => console.log('focus'),\n    onClick: () => props.buzz(),\n    id: \"buzzer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"BUZZ IN!\") : \"\");\n});\n_c2 = Question;\nexport default Question;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Question$React.forwardRef\");\n$RefreshReg$(_c2, \"Question\");","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/Question.js"],"names":["React","Component","Question","forwardRef","props","ref","question","canbuzz","console","log","buzz"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,QAAQ,gBAAGF,KAAK,CAACG,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5C,sBACI;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACE,QAAN,CAAeA,QADjB,CADJ,EAIKF,KAAK,CAACG,OAAN,gBACD;AAAQ,IAAA,GAAG,EAAEF,GAAb;AAAkB,IAAA,OAAO,EAAE,MAAMG,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAjC;AAAuD,IAAA,OAAO,EAAI,MAAML,KAAK,CAACM,IAAN,EAAxE;AAAsF,IAAA,EAAE,EAAG,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAEA,EANL,CADJ;AAWH,CAZc,CAAf;MAAIR,Q;AAcJ,eAAeA,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nvar Question = React.forwardRef((props, ref) => {\n    return (\n        <div className = \"active-question\">\n           \t<div className = \"question-text\">\n           \t\t{props.question.question}\n           \t</div>\n            {props.canbuzz ?\n            <button ref={ref} onFocus={() => console.log('focus')} onClick = {() => props.buzz()} id = \"buzzer\">BUZZ IN!</button>\n            :\"\"}\n        </div>\n    )\n\n})\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}