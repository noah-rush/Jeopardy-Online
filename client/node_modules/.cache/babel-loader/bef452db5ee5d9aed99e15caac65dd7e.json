{"ast":null,"code":"import React,{Component}from\"react\";var Answer=/*#__PURE__*/React.forwardRef(function(props,ref){return/*#__PURE__*/React.createElement(\"div\",{className:\"active-answer-panel\"},props.buzzedIn==props.me?/*#__PURE__*/React.createElement(\"form\",{id:\"answer-field\",onSubmit:function onSubmit(e){props.answerQuestion(e);}},/*#__PURE__*/React.createElement(\"input\",{ref:ref,onFocus:function onFocus(){return console.log('focus');},onChange:function onChange(e){return props.handleAnswer(e);},className:\"answer\",type:\"text\",name:\"answer\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\"})):/*#__PURE__*/React.createElement(\"div\",{className:\"waiting\"},props.buzzedIn,\" is currently answering\"),/*#__PURE__*/React.createElement(\"div\",{style:{width:80-80/6*(6-props.seconds)+\"%\"},className:\"answerTimer\"}));});export default Answer;","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/Answer.js"],"names":["React","Component","Answer","forwardRef","props","ref","buzzedIn","me","e","answerQuestion","console","log","handleAnswer","width","seconds"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,GAAIC,CAAAA,MAAM,cAAGF,KAAK,CAACG,UAAN,CAAiB,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAC1C,mBACI,2BAAK,SAAS,CAAG,qBAAjB,EACKD,KAAK,CAACE,QAAN,EAAkBF,KAAK,CAACG,EAAxB,cAED,4BAAM,EAAE,CAAG,cAAX,CAA0B,QAAQ,CAAI,kBAACC,CAAD,CAAO,CAACJ,KAAK,CAACK,cAAN,CAAqBD,CAArB,EAAwB,CAAtE,eACI,6BAAO,GAAG,CAAEH,GAAZ,CAAiB,OAAO,CAAE,yBAAMK,CAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN,EAA1B,CAAsD,QAAQ,CAAI,kBAACH,CAAD,QAAOJ,CAAAA,KAAK,CAACQ,YAAN,CAAmBJ,CAAnB,CAAP,EAAlE,CAAgG,SAAS,CAAG,QAA5G,CAAqH,IAAI,CAAG,MAA5H,CAAmI,IAAI,CAAG,QAA1I,EADJ,cAEI,6BAAO,IAAI,CAAG,QAAd,EAFJ,CAFC,cAQD,2BAAK,SAAS,CAAG,SAAjB,EACCJ,KAAK,CAACE,QADP,2BATJ,cAaE,2BAAK,KAAK,CAAG,CAACO,KAAK,CAAE,GAAK,GAAG,CAAH,EAAO,EAAET,KAAK,CAACU,OAAf,CAAN,CAAkC,GAAzC,CAAb,CAA4D,SAAS,CAAG,aAAxE,EAbF,CADJ,CAoBH,CArBY,CAAb,CAuBA,cAAeZ,CAAAA,MAAf","sourcesContent":["import React, { Component } from \"react\";\n\nvar Answer = React.forwardRef((props, ref) => {\n    return (\n        <div className = \"active-answer-panel\">\n            {props.buzzedIn == props.me ?\n\n            <form id = \"answer-field\" onSubmit = {(e) => {props.answerQuestion(e)}} >\n                <input ref={ref} onFocus={() => console.log('focus')} onChange = {(e) => props.handleAnswer(e)} className = \"answer\" type = \"text\" name = \"answer\"></input>\n                <input type = \"submit\"></input>\n                \n            </form>\n            :\n            <div className = \"waiting\">\n            {props.buzzedIn} is currently answering\n            </div>\n          }\n          <div style ={{width:(80 - 80/6* (6-props.seconds) ) + \"%\"}} className = \"answerTimer\">\n\n          </div>\n        </div>\n    )\n\n})\n\nexport default Answer;"]},"metadata":{},"sourceType":"module"}