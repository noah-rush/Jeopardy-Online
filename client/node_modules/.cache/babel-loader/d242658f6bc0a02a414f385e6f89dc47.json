{"ast":null,"code":"var _jsxFileName = \"/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/GameOver.js\";\nimport React, { Component } from \"react\";\nimport Speech from 'react-speech';\n\nvar GameOver = props => {\n  // let categories =props.categories \n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-over\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.contestants.map((player, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-results\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"final-answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Final Answer: \", props.finalAnswer), Object.keys(props.finalGuesses).length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"past-game-readout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \" \", player.name), \" finished with \", props.finalScores[player._id]) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"readout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }\n  }, \" \", player.name), \" guessed \", props.finalGuesses[player.name], \" and wagered\", Math.abs(props.scores[player._id] - props.finalScores[player._id]), \". For a final score of \", props.finalScores[player._id]))));\n};\n\n_c = GameOver;\nexport default GameOver;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/GameOver.js"],"names":["React","Component","Speech","GameOver","props","contestants","map","player","index","finalAnswer","Object","keys","finalGuesses","length","name","finalScores","_id","Math","abs","scores"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAIC,QAAQ,GAAIC,KAAD,IAAW;AACtB;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKA,KAAK,CAACC,WAAN,CAAkBC,GAAlB,CAAsB,CAACC,MAAD,EAASC,KAAT,kBAGvB;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAiC,IAAA,GAAG,EAAIA,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA+CJ,KAAK,CAACK,WAArD,CADJ,EAEKC,MAAM,CAACC,IAAP,CAAYP,KAAK,CAACQ,YAAlB,EAAgCC,MAAhC,KAA2C,CAA3C,gBACD;AAAK,IAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,SAAS,EAAG,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCN,MAAM,CAACO,IAAzC,CADA,qBACqEV,KAAK,CAACW,WAAN,CAAkBR,MAAM,CAACS,GAAzB,CADrE,CADC,gBAOD;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAM,IAAA,SAAS,EAAG,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCT,MAAM,CAACO,IAAzC,CADH,eACkEV,KAAK,CAACQ,YAAN,CAAmBL,MAAM,CAACO,IAA1B,CADlE,kBAEKG,IAAI,CAACC,GAAL,CAASd,KAAK,CAACe,MAAN,CAAaZ,MAAM,CAACS,GAApB,IAA2BZ,KAAK,CAACW,WAAN,CAAkBR,MAAM,CAACS,GAAzB,CAApC,CAFL,6BAEgGZ,KAAK,CAACW,WAAN,CAAkBR,MAAM,CAACS,GAAzB,CAFhG,CATJ,CAHC,CAFL,CADJ;AAyBH,CA3BD;;KAAIb,Q;AA6BJ,eAAeA,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Speech from 'react-speech';\n\nvar GameOver = (props) => {\n    // let categories =props.categories \n    return (\n        <div className = \"game-over\">\n           \n            {props.contestants.map((player, index) => (\n    \n            \n            <div className = \"final-results\" key = {index}>\n                <div className = \"final-answer\">Final Answer: {props.finalAnswer}</div>\n                {Object.keys(props.finalGuesses).length === 0 ? \n                <div className = \"past-game-readout\">\n                <span className = \"player-name\"> {player.name}</span> finished with {props.finalScores[player._id]}\n              \n                </div> \n                : \n                \n                <div className = \"readout\">\n                   <span className = \"player-name\"> {player.name}</span> guessed {props.finalGuesses[player.name]} and wagered \n                    {Math.abs(props.scores[player._id] - props.finalScores[player._id])}. For a final score of {props.finalScores[player._id]}\n                   </div>\n                }\n            </div>\n            ))}\n        </div>\n        \n    )\n}\n\nexport default GameOver;"]},"metadata":{},"sourceType":"module"}