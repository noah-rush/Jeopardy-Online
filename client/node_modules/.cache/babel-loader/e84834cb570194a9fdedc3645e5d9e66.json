{"ast":null,"code":"var _jsxFileName = \"/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/Answer.js\";\nimport React, { Component } from \"react\";\nvar Answer = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"active-answer-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, props.buzzedIn == props.me ? /*#__PURE__*/React.createElement(\"form\", {\n    id: \"answer-field\",\n    onSubmit: e => {\n      props.answerQuestion(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: ref,\n    onFocus: () => console.log('focus'),\n    onChange: e => props.handleAnswer(e),\n    className: \"answer\",\n    type: \"text\",\n    name: \"answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"waiting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, props.buzzedIn, \" is currently answering\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: props.answerSeconds * 100 + \"px\"\n    },\n    className: \"answerTimer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }));\n});\n_c2 = Answer;\nexport default Answer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Answer$React.forwardRef\");\n$RefreshReg$(_c2, \"Answer\");","map":{"version":3,"sources":["/home/noah/jeopardy-app/client/src/Components/JeopardyBoard/Answer.js"],"names":["React","Component","Answer","forwardRef","props","ref","buzzedIn","me","e","answerQuestion","console","log","handleAnswer","width","answerSeconds"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,MAAM,gBAAGF,KAAK,CAACG,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC1C,sBACI;AAAK,IAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACG,EAAxB,gBAED;AAAM,IAAA,EAAE,EAAG,cAAX;AAA0B,IAAA,QAAQ,EAAKC,CAAD,IAAO;AAACJ,MAAAA,KAAK,CAACK,cAAN,CAAqBD,CAArB;AAAwB,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAEH,GAAZ;AAAiB,IAAA,OAAO,EAAE,MAAMK,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAhC;AAAsD,IAAA,QAAQ,EAAKH,CAAD,IAAOJ,KAAK,CAACQ,YAAN,CAAmBJ,CAAnB,CAAzE;AAAgG,IAAA,SAAS,EAAG,QAA5G;AAAqH,IAAA,IAAI,EAAG,MAA5H;AAAmI,IAAA,IAAI,EAAG,QAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,IAAI,EAAG,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFC,gBAQD;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,KAAK,CAACE,QADP,4BATJ,eAaE;AAAK,IAAA,KAAK,EAAG;AAACO,MAAAA,KAAK,EAACT,KAAK,CAACU,aAAN,GAAoB,GAApB,GAA0B;AAAjC,KAAb;AAAqD,IAAA,SAAS,EAAG,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADJ;AAoBH,CArBY,CAAb;MAAIZ,M;AAuBJ,eAAeA,MAAf","sourcesContent":["import React, { Component } from \"react\";\n\nvar Answer = React.forwardRef((props, ref) => {\n    return (\n        <div className = \"active-answer-panel\">\n            {props.buzzedIn == props.me ?\n\n            <form id = \"answer-field\" onSubmit = {(e) => {props.answerQuestion(e)}} >\n                <input ref={ref} onFocus={() => console.log('focus')} onChange = {(e) => props.handleAnswer(e)} className = \"answer\" type = \"text\" name = \"answer\"></input>\n                <input type = \"submit\"></input>\n                \n            </form>\n            :\n            <div className = \"waiting\">\n            {props.buzzedIn} is currently answering\n            </div>\n          }\n          <div style ={{width:props.answerSeconds*100 + \"px\"}} className = \"answerTimer\">\n\n          </div>\n        </div>\n    )\n\n})\n\nexport default Answer;"]},"metadata":{},"sourceType":"module"}